@model IEnumerable<TRMDesktopUserI.Library.Models.Put.Goal>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.productid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.target)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Production)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.productid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.target)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Production)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>

        </tr>
    }

</table>

@*Add more production goal*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Goal</h4>
    @foreach (var i in Model)
    {
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => i.productid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => i.productid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => i.productid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => i.target, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => i.target, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => i.target, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => i.Product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => i.Product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => i.Product, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => i.Production, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => i.Production, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => i.Production, "", new { @class = "text-danger" })
            </div>
        </div>

    }
</div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add to List" class="btn btn-default" />
            </div>
        </div>
